version: '3.8'

services:
  mem0:
    image: mem0/mem0-api-server:latest
    environment:
      - OPENAI_API_KEY
    ports:
      - "8888:8888"
    volumes:
      - ./history:/app/history
    networks:
      - mem0_network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.mem0.rule=Host(`mem0.strudel.marketing`)"
      - "traefik.http.routers.mem0.entrypoints=websecure"
      - "traefik.http.routers.mem0.tls.certresolver=letsencrypt"
      - "traefik.http.services.mem0.loadbalancer.server.port=8888"

  postgres:
    image: ankane/pgvector:v0.5.1
    restart: on-failure
    shm_size: "128mb"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    healthcheck:
      test: ["CMD", "pg_isready", "-q", "-d", "postgres", "-U", "postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - postgres_db:/var/lib/postgresql/data
    ports:
      - "8432:5432"
    networks:
      - mem0_network

  neo4j:
    image: neo4j:5.26.4
    environment:
      - NEO4J_AUTH=neo4j/mem0graph
      - NEO4J_PLUGINS=["apoc"]
      - NEO4J_apoc_export_file_enabled=true
      - NEO4J_apoc_import_file_enabled=true
      - NEO4J_apoc_import_file_use__neo4j__config=true
    healthcheck:
      test: wget http://localhost:7687 || exit 1
      interval: 1s
      timeout: 10s
      retries: 20
      start_period: 3s
    volumes:
      - neo4j_data:/data
    ports:
      - "7474:7474"
      - "7687:7687"
    networks:
      - mem0_network

volumes:
  neo4j_data:
  postgres_db:

networks:
  mem0_network:
    driver: bridge
